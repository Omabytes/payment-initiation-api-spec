{
  "swagger": "2.0",
  "info": {
    "title": "Read Write APIs",
    "description": "Draft Swagger specification for Read Write",
    "contact": {
      "name": "Claudio Viola",
      "email": "claudio.viola@openbanking.org.uk"
    },
    "version": "v0.1"
  },
  "basePath": "/open-banking",
  "schemes": [
    "https"
  ],
  "produces": [
    "application/prs.openbanking.rwdata.v0.1+json"
  ],
  "paths": {
    "/payments/simple": {
      "post": {
        "tags": [
          "Simple Payment"
        ],
        "summary": "Setup a simple payment",
        "description": "Setup a simple payment (e.g. single immediate domestic payments, single future dated payment , single e-commerce payment or simple recurring payment)",
        "operationId": "SetupSimplePayment",
        "consumes": [
          "application/prs.openbanking.rwdata.v0.1+json"
        ],
        "produces": [
          "application/prs.openbanking.rwdata.v0.1+json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Setup a simple payment",
            "required": true,
            "schema": {
              "title": "Simple Payment Setup Post Request",
              "description": "Allows setup of a single immediate domestic payments, single future dated payment , single e-commerce payment or simple recurring payment",
              "type": "object",
              "properties": {
                "InstructionIdentification": {
                  "description": "Unique identification as assigned by an instructing party for an instructed party to unambiguously identify the instruction. Usage: the  instruction identification is a point to point reference that can be used between the instructing party and the instructed party to refer to the individual instruction. It can be included in several messages related to the instruction.",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 35
                },
                "EndToEndIdentification": {
                  "description": "Unique identification assigned by the initiating party to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain. Usage: The end-to-end identification can be used for reconciliation or to link tasks relating to the transaction. It can be included in several messages related to the transaction.",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 35
                },
                "RemittanceInformation": {
                  "description": "Information supplied to enable the matching/reconciliation of an entry with the items that the payment is intended to settle, such as commercial invoices in an accounts' receivable system, in an unstructured form.",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 140
                },
                "MerchantCategoryCode": {
                  "description": "Category code conform to ISO 18245, related to the type of services or goods the merchant provides for the transaction.",
                  "type": "string",
                  "minLength": 3,
                  "maxLength": 4
                },
                "PaymentType": {
                  "description": "Specifies the Open Banking payment type requested",
                  "type": "string",
                  "enum": [
                    "FutureDated",
                    "Immediate"
                  ]
                },
                "RequestedExecutionDate": {
                  "description": "Date at which the initiating party requests the clearing agent to process the payment. Usage: This is the date on which the debtor's account is to be debited. If payment by cheque, the date when the cheque must be generated by the bank.",
                  "type": "string",
                  "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                },
                "InstructedAmount": {
                  "description": "Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party. Usage: This amount has to be transported unchanged through the transaction chain.",
                  "type": "object",
                  "properties": {
                    "Amount": {
                      "type": "string",
                      "pattern": "^-?\\d{1,13}\\.\\d{1,5}$"
                    },
                    "Currency": {
                      "description": "A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 'Codes for the representation of currencies and funds'",
                      "type": "string",
                      "pattern": "^[A-Z]{3}$"
                    }
                  },
                  "required": [
                    "Amount",
                    "Currency"
                  ],
                  "additionalProperties": false
                },
                "DebtorAgent": {
                  "description": "Financial institution servicing an account for the debtor.",
                  "type": "object",
                  "properties": {
                    "SchemeName": {
                      "description": "Specifies the external financial institution identification scheme name code in the format of character string.",
                      "type": "string",
                      "enum": [
                        "UKSortCode"
                      ]
                    },
                    "Identification": {
                      "description": "United Kingdom (UK) Sort Code - identifies British financial institutions on the British national clearing systems. The sort code is assigned by the Association for Payments and Clearing Services (APACS).",
                      "type": "string",
                      "pattern": "^SC[0-9]{6,6}$"
                    }
                  },
                  "required": [
                    "SchemeName",
                    "Identification"
                  ],
                  "additionalProperties": false
                },
                "DebtorAccount": {
                  "description": "Unambiguous identification of the account of the debtor to which a debit entry will be made as a result of the transaction.",
                  "type": "object",
                  "properties": {
                    "SchemeName": {
                      "description": "Name of the identification scheme, in a coded form as published in an external list.",
                      "type": "string",
                      "enum": [
                        "BBAN"
                      ]
                    },
                    "Identification": {
                      "description": "maxLength 34 text",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 34
                    },
                    "Name": {
                      "description": "maxLength 70 text",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 70
                    }
                  },
                  "required": [
                    "SchemeName",
                    "Identification"
                  ],
                  "additionalProperties": false
                },
                "CreditorAgent": {
                  "description": "Financial institution servicing an account for the creditor.",
                  "type": "object",
                  "properties": {
                    "SchemeName": {
                      "description": "Specifies the external financial institution identification scheme name code in the format of character string.",
                      "type": "string",
                      "enum": [
                        "UKSortCode"
                      ]
                    },
                    "Identification": {
                      "description": "United Kingdom (UK) Sort Code - identifies British financial institutions on the British national clearing systems. The sort code is assigned by the Association for Payments and Clearing Services (APACS).",
                      "type": "string",
                      "pattern": "^SC[0-9]{6,6}$"
                    }
                  },
                  "required": [
                    "SchemeName",
                    "Identification"
                  ],
                  "additionalProperties": false
                },
                "CreditorAccount": {
                  "description": "Unambiguous identification of the account of the creditor to which a credit entry will be posted as a result of the payment transaction.",
                  "type": "object",
                  "properties": {
                    "SchemeName": {
                      "description": "Name of the identification scheme, in a coded form as published in an external list.",
                      "type": "string",
                      "enum": [
                        "BBAN"
                      ]
                    },
                    "Identification": {
                      "description": "maxLength 34 text",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 34
                    },
                    "Name": {
                      "description": "maxLength 70 text",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 70
                    }
                  },
                  "required": [
                    "SchemeName",
                    "Identification"
                  ],
                  "additionalProperties": false
                }
              },
              "required": [
                "InstructionIdentification",
                "EndToEndIdentification",
                "InstructedAmount",
                "CreditorAgent",
                "CreditorAccount"
              ],
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payment setup successfully",
            "schema": {
              "title": "Simple Payment Setup Post Response",
              "type": "object",
              "properties": {
                "IntentID": {
                  "description": "Intent ID is the ASPSP identifier for the payment setup intent",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 35
                },
                "EndToEndIdentification": {
                  "description": "Unique identification assigned by the initiating party to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain. Usage: The end-to-end identification can be used for reconciliation or to link tasks relating to the transaction. It can be included in several messages related to the transaction.",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 35
                }
              },
              "required": [
                "IntentID",
                "EndToEndIdentification"
              ],
              "additionalProperties": false
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "title": "HTTP 500 Error",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "500"
                  ]
                },
                "title": {
                  "type": "string",
                  "enum": [
                    "InternalServerError"
                  ]
                },
                "description": {
                  "type": "string",
                  "enum": [
                    "The payment infrastructure is busy or unavailable."
                  ]
                }
              },
              "required": [
                "status",
                "title",
                "description"
              ],
              "additionalProperties": false
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "title": "HTTP 401 Error",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "401"
                  ]
                },
                "title": {
                  "type": "string",
                  "enum": [
                    "Unauthorised"
                  ]
                },
                "description": {
                  "type": "string",
                  "enum": [
                    "The request is unauthorised. Do not resubmit the request."
                  ]
                }
              },
              "required": [
                "status",
                "title",
                "description"
              ],
              "additionalProperties": false
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "title": "Simple Payment Setup Post 403 Response",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "403"
                  ]
                },
                "title": {
                  "type": "string",
                  "enum": [
                    "InvalidPayerSortCode",
                    "InvalidPayerAccount",
                    "InvalidPayeeSortCode",
                    "InvalidPayeeAccount",
                    "InvalidAmount",
                    "InvalidExecutionDate",
                    "SchemeReject",
                    "SendingInstitutionReject",
                    "ReceivingInstitutionReject"
                  ]
                },
                "description": {
                  "type": "string",
                  "enum": [
                    "The payer sort code is not valid - is closed, does not exist, or is not valid for the scheme.",
                    "The payer account is not valid - is closed, does not exist, or is not valid for the scheme.",
                    "The payee sort code is not valid - is closed, does not exist, or is not valid for the scheme.",
                    "The payee account is not valid - is closed, does not exist, or is not valid for the scheme.",
                    "The amount is not valid - exceeds scheme limit.",
                    "The date is too far in the future.",
                    "The scheme has rejected payment for an unspecified reason.",
                    "The sending institution has rejected payment for an unspecified reason.",
                    "The receiving institution has rejected payment for an unspecified reason."
                  ]
                }
              },
              "required": [
                "status",
                "title",
                "description"
              ],
              "additionalProperties": false
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "title": "Simple Payment Setup Post 409 Response",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "409"
                  ]
                },
                "title": {
                  "type": "string",
                  "enum": [
                    "SendingInstitutionReject"
                  ]
                },
                "description": {
                  "type": "string",
                  "enum": [
                    "The sending institution has rejected payment for an unspecified reason."
                  ]
                }
              },
              "required": [
                "status",
                "title",
                "description"
              ],
              "additionalProperties": false
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "title": "HTTP 500 Error",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "500"
                  ]
                },
                "title": {
                  "type": "string",
                  "enum": [
                    "InternalServerError"
                  ]
                },
                "description": {
                  "type": "string",
                  "enum": [
                    "The payment infrastructure is busy or unavailable."
                  ]
                }
              },
              "required": [
                "status",
                "title",
                "description"
              ],
              "additionalProperties": false
            }
          }
        },
        "security": [
          {
            "TPPOAuth2Security": [
              "tpp_client_credential"
            ]
          }
        ]
      }
    },
    "/payments/simple/{IntentID}/submit": {
      "put": {
        "tags": [
          "Simple Payment"
        ],
        "summary": "Submit a simple payment",
        "description": "Submit a previously setup simple payment (e.g. single immediate domestic payments, single future dated payment , single e-commerce payment or simple recurring payment)",
        "operationId": "SubmitSimplePayment",
        "consumes": [
          "application/prs.openbanking.rwdata.v0.1+json"
        ],
        "produces": [
          "application/prs.openbanking.rwdata.v0.1+json"
        ],
        "parameters": [
          {
            "name": "IntentID",
            "in": "path",
            "description": "Intent ID of the previously set up simple payment",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body parameters needed to submit a simple payment",
            "required": true,
            "schema": {
              "title": "Single Payment Submit Put Request",
              "type": "object",
              "properties": {
                "IntentID": {
                  "description": "Intent ID is the ASPSP identifier for the payment setup intent",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 35
                },
                "InstructionIdentification": {
                  "description": "Unique identification as assigned by an instructing party for an instructed party to unambiguously identify the instruction. Usage: the  instruction identification is a point to point reference that can be used between the instructing party and the instructed party to refer to the individual instruction. It can be included in several messages related to the instruction.",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 35
                },
                "EndToEndIdentification": {
                  "description": "Unique identification assigned by the initiating party to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain. Usage: The end-to-end identification can be used for reconciliation or to link tasks relating to the transaction. It can be included in several messages related to the transaction.",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 35
                },
                "RemittanceInformation": {
                  "description": "Information supplied to enable the matching/reconciliation of an entry with the items that the payment is intended to settle, such as commercial invoices in an accounts' receivable system, in an unstructured form.",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 140
                },
                "MerchantCategoryCode": {
                  "description": "Category code conform to ISO 18245, related to the type of services or goods the merchant provides for the transaction.",
                  "type": "string",
                  "minLength": 3,
                  "maxLength": 4
                },
                "PaymentType": {
                  "description": "Specifies the Open Banking payment type requested",
                  "type": "string",
                  "enum": [
                    "FutureDated",
                    "Immediate"
                  ]
                },
                "RequestExecutionDate": {
                  "description": "Date at which the initiating party requests the clearing agent to process the payment. Usage: This is the date on which the debtor's account is to be debited. If payment by cheque, the date when the cheque must be generated by the bank.",
                  "type": "string",
                  "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                },
                "InstructedAmount": {
                  "description": "Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party. Usage: This amount has to be transported unchanged through the transaction chain.",
                  "type": "object",
                  "properties": {
                    "Amount": {
                      "type": "string",
                      "pattern": "^-?\\d{1,13}\\.\\d{1,5}$"
                    },
                    "Currency": {
                      "description": "A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 'Codes for the representation of currencies and funds'",
                      "type": "string",
                      "pattern": "^[A-Z]{3}$"
                    }
                  },
                  "required": [
                    "Amount",
                    "Currency"
                  ],
                  "additionalProperties": false
                },
                "DebtorAgent": {
                  "description": "Financial institution servicing an account for the debtor.",
                  "type": "object",
                  "properties": {
                    "SchemeName": {
                      "description": "Specifies the external financial institution identification scheme name code in the format of character string.",
                      "type": "string",
                      "enum": [
                        "UKSortCode"
                      ]
                    },
                    "Identification": {
                      "description": "United Kingdom (UK) Sort Code - identifies British financial institutions on the British national clearing systems. The sort code is assigned by the Association for Payments and Clearing Services (APACS).",
                      "type": "string",
                      "pattern": "^SC[0-9]{6,6}$"
                    }
                  },
                  "required": [
                    "SchemeName",
                    "Identification"
                  ],
                  "additionalProperties": false
                },
                "DebtorAccount": {
                  "description": "Unambiguous identification of the account of the debtor to which a debit entry will be made as a result of the transaction.",
                  "type": "object",
                  "properties": {
                    "SchemeName": {
                      "description": "Name of the identification scheme, in a coded form as published in an external list.",
                      "type": "string",
                      "enum": [
                        "BBAN"
                      ]
                    },
                    "Identification": {
                      "description": "maxLength 34 text",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 34
                    },
                    "Name": {
                      "description": "maxLength 70 text",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 70
                    }
                  },
                  "required": [
                    "SchemeName",
                    "Identification"
                  ],
                  "additionalProperties": false
                },
                "CreditorAgent": {
                  "description": "Financial institution servicing an account for the creditor.",
                  "type": "object",
                  "properties": {
                    "SchemeName": {
                      "description": "Specifies the external financial institution identification scheme name code in the format of character string.",
                      "type": "string",
                      "enum": [
                        "UKSortCode"
                      ]
                    },
                    "Identification": {
                      "description": "United Kingdom (UK) Sort Code - identifies British financial institutions on the British national clearing systems. The sort code is assigned by the Association for Payments and Clearing Services (APACS).",
                      "type": "string",
                      "pattern": "^SC[0-9]{6,6}$"
                    }
                  },
                  "required": [
                    "SchemeName",
                    "Identification"
                  ],
                  "additionalProperties": false
                },
                "CreditorAccount": {
                  "description": "Unambiguous identification of the account of the creditor to which a credit entry will be posted as a result of the payment transaction.",
                  "type": "object",
                  "properties": {
                    "SchemeName": {
                      "description": "Name of the identification scheme, in a coded form as published in an external list.",
                      "type": "string",
                      "enum": [
                        "BBAN"
                      ]
                    },
                    "Identification": {
                      "description": "maxLength 34 text",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 34
                    },
                    "Name": {
                      "description": "maxLength 70 text",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 70
                    }
                  },
                  "required": [
                    "SchemeName",
                    "Identification"
                  ],
                  "additionalProperties": false
                }
              },
              "required": [
                "IntentID",
                "InstructionIdentification",
                "EndToEndIdentification",
                "InstructedAmount",
                "CreditorAgent",
                "CreditorAccount"
              ],
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payment executed or ready for scheme to execute.",
            "schema": {
              "title": "Simple Payment Submit Put 200 Response",
              "type": "object",
              "properties": {
                "PaymentStatus": {
                  "type": "string",
                  "enum": [
                    "ReadyforExecution"
                  ]
                },
                "PaymentStatusDescription": {
                  "type": "string",
                  "enum": [
                    "Payment execution instruction accepted."
                  ]
                }
              },
              "required": [
                "PaymentStatus"
              ],
              "additionalProperties": false
            }
          },
          "202": {
            "description": "Payment execution instruction accepted.",
            "schema": {
              "title": "Simple Payment Submit Put 202 Response",
              "type": "object",
              "properties": {
                "PaymentStatus": {
                  "type": "string",
                  "enum": [
                    "InstructionReceived"
                  ]
                },
                "PaymentStatusDescription": {
                  "type": "string",
                  "enum": [
                    "Payment execution instruction accepted."
                  ]
                }
              },
              "required": [
                "PaymentStatus",
                "PaymentStatusDescription"
              ],
              "additionalProperties": false
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "title": "HTTP 500 Error",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "500"
                  ]
                },
                "title": {
                  "type": "string",
                  "enum": [
                    "InternalServerError"
                  ]
                },
                "description": {
                  "type": "string",
                  "enum": [
                    "The payment infrastructure is busy or unavailable."
                  ]
                }
              },
              "required": [
                "status",
                "title",
                "description"
              ],
              "additionalProperties": false
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "title": "HTTP 401 Error",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "401"
                  ]
                },
                "title": {
                  "type": "string",
                  "enum": [
                    "Unauthorised"
                  ]
                },
                "description": {
                  "type": "string",
                  "enum": [
                    "The request is unauthorised. Do not resubmit the request."
                  ]
                }
              },
              "required": [
                "status",
                "title",
                "description"
              ],
              "additionalProperties": false
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "title": "Simple Payment Submit Put 403 Response",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "403"
                  ]
                },
                "title": {
                  "type": "string",
                  "enum": [
                    "InvalidPayerSortCode",
                    "InvalidPayerAccount",
                    "InvalidPayeeSortCode",
                    "InvalidPayeeAccount",
                    "InvalidAmount",
                    "InvalidExecutionDate",
                    "SchemeReject",
                    "SendingInstitutionReject",
                    "ReceivingInstitutionReject"
                  ]
                },
                "description": {
                  "type": "string",
                  "enum": [
                    "The payer sort code is not valid - is closed, does not exist, or is not valid for the scheme.",
                    "The payer account is not valid - is closed, does not exist, or is not valid for the scheme.",
                    "The payee sort code is not valid - is closed, does not exist, or is not valid for the scheme.",
                    "The payee account is not valid - is closed, does not exist, or is not valid for the scheme.",
                    "The amount is not valid - exceeds scheme limit.",
                    "The date is too far in the future.",
                    "The scheme has rejected payment for an unspecified reason.",
                    "The sending institution has rejected payment for an unspecified reason.",
                    "The receiving institution has rejected payment for an unspecified reason."
                  ]
                }
              },
              "required": [
                "status",
                "title",
                "description"
              ],
              "additionalProperties": false
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "title": "Simple Payment Submit Put 409 Response",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "409"
                  ]
                },
                "title": {
                  "type": "string",
                  "enum": [
                    "SendingInstitutionReject"
                  ]
                },
                "description": {
                  "type": "string",
                  "enum": [
                    "The sending institution has rejected payment for an unspecified reason."
                  ]
                }
              },
              "required": [
                "status",
                "title",
                "description"
              ],
              "additionalProperties": false
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "title": "HTTP 500 Error",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "500"
                  ]
                },
                "title": {
                  "type": "string",
                  "enum": [
                    "InternalServerError"
                  ]
                },
                "description": {
                  "type": "string",
                  "enum": [
                    "The payment infrastructure is busy or unavailable."
                  ]
                }
              },
              "required": [
                "status",
                "title",
                "description"
              ],
              "additionalProperties": false
            }
          }
        },
        "security": [
          {
            "OAuth2Security": [
              "payment"
            ]
          }
        ]
      }
    },
    "/payments/simple/{IntentID}/cancel": {
      "delete": {
        "tags": [
          "Simple Payment"
        ],
        "summary": "Cancel a simple payment",
        "description": "Cancel a simple payment (e.g. single immediate domestic payments, single future dated payment , single e-commerce payment or simple recurring payment)",
        "operationId": "CancelSimplePayment",
        "produces": [
          "application/prs.openbanking.rwdata.v0.1+json"
        ],
        "parameters": [
          {
            "name": "IntentID",
            "in": "path",
            "description": "Intent ID of the previously set up simple payment",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Payment successfully deleted",
            "schema": {
              "title": "Simple Payment Cancel Delete 200 Response",
              "type": "object",
              "properties": {
                "PaymentStatus": {
                  "type": "string",
                  "enum": [
                    "Cancelled"
                  ]
                },
                "PaymentStatusDescription": {
                  "type": "string",
                  "enum": [
                    "Payment instruction cancelled."
                  ]
                }
              },
              "required": [
                "PaymentStatus"
              ],
              "additionalProperties": false
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "title": "HTTP 500 Error",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "500"
                  ]
                },
                "title": {
                  "type": "string",
                  "enum": [
                    "InternalServerError"
                  ]
                },
                "description": {
                  "type": "string",
                  "enum": [
                    "The payment infrastructure is busy or unavailable."
                  ]
                }
              },
              "required": [
                "status",
                "title",
                "description"
              ],
              "additionalProperties": false
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "title": "HTTP 401 Error",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "401"
                  ]
                },
                "title": {
                  "type": "string",
                  "enum": [
                    "Unauthorised"
                  ]
                },
                "description": {
                  "type": "string",
                  "enum": [
                    "The request is unauthorised. Do not resubmit the request."
                  ]
                }
              },
              "required": [
                "status",
                "title",
                "description"
              ],
              "additionalProperties": false
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "title": "HTTP 500 Error",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "500"
                  ]
                },
                "title": {
                  "type": "string",
                  "enum": [
                    "InternalServerError"
                  ]
                },
                "description": {
                  "type": "string",
                  "enum": [
                    "The payment infrastructure is busy or unavailable."
                  ]
                }
              },
              "required": [
                "status",
                "title",
                "description"
              ],
              "additionalProperties": false
            }
          }
        },
        "security": [
          {
            "OAuth2Security": [
              "payment"
            ]
          }
        ]
      }
    },
    "/payments/status/{IntentID}": {
      "get": {
        "tags": [
          "Simple Payment"
        ],
        "summary": "Gets status for a payment",
        "description": "Gets status for a previously submitted  payment (single instruction within a complex or simple  payment)",
        "operationId": "GetSimplePaymentStatus",
        "produces": [
          "application/prs.openbanking.rwdata.v0.1+json"
        ],
        "parameters": [
          {
            "name": "IntentID",
            "in": "path",
            "description": "Intent ID of the previously set up simple payment",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Payment Status",
            "schema": {
              "title": "Simple Payment Status GET 200 Response",
              "type": "object",
              "properties": {
                "PaymentStatus": {
                  "type": "string",
                  "enum": [
                    "AwaitingAuthorisation",
                    "ReadyforSubmission",
                    "ReadyforExecution",
                    "SendingInstitutionExecution",
                    "SchemeExecution",
                    "ReceivingInstitutionExecution",
                    "ExecutionComplete",
                    "ExecutionFailure",
                    "Cancelled"
                  ]
                },
                "PaymentStatusDescription": {
                  "type": "string",
                  "enum": [
                    "Payment request requires further authorisation to progress.",
                    "Payment request is authorised and ready for submission.",
                    "Payment executed or ready for scheme to execute.",
                    "Payment is being executed by the sending institution.",
                    "Payment has been passed from sending institution to scheme for processing.",
                    "Payment has passed from scheme to receiving institution for processing.",
                    "Payment has been applied to receiving account and is complete.",
                    "Payment to receving account has failed.",
                    "Payment instruction cancelled."
                  ]
                }
              },
              "required": [
                "PaymentStatus",
                "PaymentStatusDescription"
              ],
              "additionalProperties": false
            }
          }
        },
        "security": [
          {
            "OAuth2Security": [
              "payment"
            ]
          }
        ]
      }
    }
  },
  "securityDefinitions": {
    "ConsumerOAuth2Security": {
      "type": "oauth2",
      "flow": "accessCode",
      "tokenUrl": "/token",
      "scopes": {
        "make_payment": "Generic payment scope"
      }
    },
    "TPPOAuth2Security": {
      "type": "oauth2",
      "flow": "application",
      "tokenUrl": "/token",
      "scopes": {
        "tpp_client_credential": "TPP Client Credential Scope"
      }
    }
  },
  "tags": [
    {
      "name": "Simple Payment",
      "description": "Simple Payments endpoints"
    }
  ],
  "responses": {
    "400ErrorResponse": {
      "description": "Bad Request",
      "schema": {
        "title": "HTTP 500 Error",
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "500"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "InternalServerError"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "The payment infrastructure is busy or unavailable."
            ]
          }
        },
        "required": [
          "status",
          "title",
          "description"
        ],
        "additionalProperties": false
      }
    },
    "401ErrorResponse": {
      "description": "Unauthorized",
      "schema": {
        "title": "HTTP 401 Error",
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "401"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Unauthorised"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "The request is unauthorised. Do not resubmit the request."
            ]
          }
        },
        "required": [
          "status",
          "title",
          "description"
        ],
        "additionalProperties": false
      }
    },
    "500ErrorResponse": {
      "description": "Internal Server Error",
      "schema": {
        "title": "HTTP 500 Error",
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "500"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "InternalServerError"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "The payment infrastructure is busy or unavailable."
            ]
          }
        },
        "required": [
          "status",
          "title",
          "description"
        ],
        "additionalProperties": false
      }
    }
  }
}